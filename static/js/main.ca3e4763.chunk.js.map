{"version":3,"sources":["api/getPhonesFromServer.js","Components/Header.js","Components/Footer.js","Components/Datatable.js","App.js","index.js"],"names":["getPhonesFromServer","phonesData","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","itemsPerPageOptions","key","value","text","Header","_ref","onChangeItemsPerPage","onSearchItems","inputValue","selectValue","react_default","createElement","className","Select","placeholder","options","onChange","Input","icon","iconPosition","type","Footer","firstTableItem","lastTableItem","entries","onSwitchPage","pagesAmount","activePage","lastItemOnPage","concat","Pagination","boundaryRange","ellipsisItem","firstItem","content","Icon","name","lastItem","prevItem","nextItem","pointing","secondary","totalPages","onPageChange","storedPage","JSON","parse","localStorage","getItem","storedItemsPerPage","storedSearchValue","storedHighlightedValue","storedActiveColumn","storedDirection","storedSortType","storedSelectedItems","Datatable","items","columnConfig","onEdit","_useState","useState","_useState2","Object","slicedToArray","page","setPage","_useState3","_useState4","itemsPerPage","setItemsPerPage","_useState5","_useState6","searchValue","setSearchValue","_useState7","_useState8","highlightedValue","setHighlitedValue","_useState9","_useState10","activeColumn","setActiveColumn","_useState11","_useState12","direction","setDirection","_useState13","_useState14","sortType","setSortType","_useState15","_useState16","selectedItems","setSelectedItems","_useState17","_useState18","itemToEditId","setItemToEditId","_useState19","_useState20","itemToEditField","setItemToEditField","_useState21","_useState22","editedValue","setEditedValue","applySearchWithDebounce","_","debounce","highlightText","split","RegExp","map","part","i","react","toLowerCase","style","backgroundColor","toggleItem","itemId","includes","toConsumableArray","filter","selectedItemId","newSelectedItems","push","setEditState","currentItem","id","keys","forEach","setNewCellValue","$","data","editItem","itemToedit","find","item","editedItem","objectSpread2","defineProperty","editOnBlur","editWithKey","event","useEffect","setItem","stringify","searchedItems","isSearchable","some","callback","string","b","localeCompare","number","sortedItems","sort","reverse","totalItemsAmount","length","Math","ceil","visibleItems","slice","Components_Header","Table","striped","sortable","selectable","celled","Row","HeaderCell","cn","Checkbox","toggle","checked","every","column","textAlign","title","sorted","onClick","clickedColumn","currentSortType","Body","imageUrl","Cell","padding","Form","TextArea","defaultValue","onKeyDown","onBlur","onDoubleClick","age","snippet","Components_Footer","storedItems","App","originalItems","setOriginalItems","isLoading","setIsLoading","isError","setIsError","t0","fetchData","Components_Datatable","itemToEdit","editedItems","splice","indexOf","Fragment","Message","Button","clear","window","location","reload","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ca3e4763.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst PHONES_URL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\nexport const getPhonesFromServer = async() => {\n  const phonesData = await fetch(PHONES_URL);\n\n  return phonesData.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Select } from 'semantic-ui-react';\n\nconst itemsPerPageOptions = [\n  {\n    key: 2, value: 2, text: '2 phones per page',\n  },\n  {\n    key: 3, value: 3, text: '3 phones per page',\n  },\n  {\n    key: 5, value: 5, text: '5 phones per page',\n  },\n  {\n    key: 10, value: 10, text: '10 phones per page',\n  },\n  {\n    key: 20, value: 20, text: '20 phones per page',\n  },\n];\n\nconst Header = (\n  { onChangeItemsPerPage, onSearchItems, inputValue, selectValue }\n) => (\n  <div className=\"table-options\">\n    <Select\n      placeholder=\"Select phones per page\"\n      options={itemsPerPageOptions}\n      onChange={onChangeItemsPerPage}\n      value={selectValue}\n    />\n\n    <Input\n      icon=\"search\"\n      placeholder=\"Search...\"\n      iconPosition=\"left\"\n      type=\"search\"\n      onChange={onSearchItems}\n      value={inputValue}\n    />\n  </div>\n);\n\nHeader.propTypes = {\n  onChangeItemsPerPage: PropTypes.func.isRequired,\n  onSearchItems: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n  selectValue: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Pagination } from 'semantic-ui-react';\n\nconst Footer = ({\n  firstTableItem,\n  lastTableItem,\n  entries,\n  onSwitchPage,\n  pagesAmount,\n  activePage,\n}) => {\n  const lastItemOnPage = lastTableItem > entries ? entries : lastTableItem;\n\n  return (\n    <div className=\"table-options\">\n      <div>\n        {`Showing ${firstTableItem} to ${lastItemOnPage} of ${entries} entries`}\n      </div>\n\n      <Pagination\n        activePage={activePage}\n        boundaryRange={0}\n        ellipsisItem={null}\n        firstItem={{\n          content: <Icon name=\"angle double left\" />, icon: true,\n        }}\n        lastItem={{\n          content: <Icon name=\"angle double right\" />, icon: true,\n        }}\n        prevItem={{\n          content: <Icon name=\"angle left\" />, icon: true,\n        }}\n        nextItem={{\n          content: <Icon name=\"angle right\" />, icon: true,\n        }}\n        pointing\n        secondary\n        totalPages={pagesAmount}\n        onPageChange={onSwitchPage}\n      />\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  firstTableItem: PropTypes.number.isRequired,\n  lastTableItem: PropTypes.number.isRequired,\n  entries: PropTypes.number.isRequired,\n  pagesAmount: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onSwitchPage: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport _ from 'lodash';\nimport { Table, Checkbox, Form } from 'semantic-ui-react';\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst storedPage = JSON.parse(localStorage.getItem('page'));\nconst storedItemsPerPage = JSON.parse(localStorage.getItem('itemsPerPage'));\nconst storedSearchValue = JSON.parse(localStorage.getItem('searchValue'));\nconst storedHighlightedValue = JSON.parse(\n  localStorage.getItem('highlightedValue')\n);\nconst storedActiveColumn = JSON.parse(localStorage.getItem('activeColumn'));\nconst storedDirection = JSON.parse(localStorage.getItem('direction'));\nconst storedSortType = JSON.parse(localStorage.getItem('sortType'));\nconst storedSelectedItems = JSON.parse(localStorage.getItem('selectedItems'));\n\nconst Datatable = ({ items, columnConfig, onEdit }) => {\n  const [page, setPage] = useState(storedPage || 1);\n  const [itemsPerPage, setItemsPerPage] = useState(storedItemsPerPage || 5);\n\n  const [searchValue, setSearchValue] = useState(storedSearchValue || '');\n  const [highlightedValue, setHighlitedValue] = useState(\n    storedHighlightedValue || ''\n  );\n\n  const [activeColumn, setActiveColumn] = useState(storedActiveColumn || null);\n  const [direction, setDirection] = useState(storedDirection || null);\n  const [sortType, setSortType] = useState(storedSortType || '');\n  const [selectedItems, setSelectedItems] = useState(storedSelectedItems || []);\n\n  const [itemToEditId, setItemToEditId] = useState(0);\n  const [itemToEditField, setItemToEditField] = useState('');\n  const [editedValue, setEditedValue] = useState('');\n\n  const switchPage = ($, data) => {\n    setPage(data.activePage);\n  };\n\n  const changeItemsPerPage = ($, data) => {\n    setItemsPerPage(data.value);\n    setPage(1);\n  };\n\n  const applySearchWithDebounce = _.debounce((value) => {\n    setSearchValue(value);\n  }, 500);\n\n  const searchItems = ($, data) => {\n    const value = data.value.toLowerCase().slice(0, 37);\n\n    setPage(1);\n    setHighlitedValue(value);\n    applySearchWithDebounce(value);\n  };\n\n  const highlightText = (text) => {\n    if (!highlightedValue || text === '') {\n      return text;\n    }\n\n    const parts = text.split(new RegExp(`(${highlightedValue})`, 'gi'));\n\n    return parts.map((part, i) => (\n      <Fragment key={`${part + i}`}>\n        {part.toLowerCase() === highlightedValue.toLowerCase()\n          ? <span style={{ backgroundColor: 'green' }}>{part}</span>\n          : part}\n      </Fragment>\n    ));\n  };\n\n  const handleSort = (clickedColumn, currentSortType) => {\n    if (!currentSortType) {\n      return;\n    }\n\n    setSortType(currentSortType);\n\n    if (activeColumn !== clickedColumn) {\n      setActiveColumn(clickedColumn);\n      setDirection('ascending');\n    } else {\n      setDirection(direction === 'ascending' ? 'descending' : 'ascending');\n    }\n  };\n\n  const toggleItem = (itemId) => {\n    if (selectedItems.includes(itemId)) {\n      setSelectedItems([...selectedItems].filter(\n        selectedItemId => selectedItemId !== itemId\n      ));\n    } else {\n      const newSelectedItems = [...selectedItems];\n\n      newSelectedItems.push(itemId);\n\n      setSelectedItems(newSelectedItems);\n    }\n  };\n\n  const toggleAllItems = () => {\n    items.length !== selectedItems.length\n      ? setSelectedItems(items.map(item => item.id))\n      : setSelectedItems([]);\n  };\n\n  const setEditState = (currentItem, value) => {\n    setItemToEditId(currentItem.id);\n    setEditedValue(value);\n\n    _.keys(currentItem).forEach((key) => {\n      if (currentItem[key] === value) {\n        setItemToEditField(key);\n      }\n    });\n  };\n\n  const setNewCellValue = ($, data) => {\n    setEditedValue(data.value);\n  };\n\n  const editItem = () => {\n    const itemToedit = items.find(item => item.id === itemToEditId);\n\n    toggleItem(itemToedit);\n\n    if (editedValue !== itemToedit[itemToEditField]) {\n      const editedItem = {\n        ...itemToedit,\n        [itemToEditField]: editedValue,\n      };\n\n      onEdit(editedItem);\n    }\n\n    setItemToEditId(0);\n  };\n\n  const editOnBlur = () => {\n    editItem();\n  };\n\n  const editWithKey = (event) => {\n    if (event.key === 'Enter') {\n      editItem();\n    }\n\n    if (event.key === 'Escape') {\n      setItemToEditId(0);\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem('originalItems', JSON.stringify(items));\n    localStorage.setItem('page', JSON.stringify(page));\n    localStorage.setItem('itemsPerPage', JSON.stringify(itemsPerPage));\n    localStorage.setItem('searchValue', JSON.stringify(searchValue));\n    localStorage.setItem('highlightedValue', JSON.stringify(highlightedValue));\n    localStorage.setItem('activeColumn', JSON.stringify(activeColumn));\n    localStorage.setItem('direction', JSON.stringify(direction));\n    localStorage.setItem('sortType', JSON.stringify(sortType));\n    localStorage.setItem('selectedItems', JSON.stringify(selectedItems));\n  });\n\n  const value = searchValue.toLowerCase();\n  const searchedItems = items.filter(item => (\n    _.keys(columnConfig)\n      .filter(key => columnConfig[key].isSearchable)\n      .some(key => item[key].toLowerCase().includes(value))\n  ));\n\n  const by = {\n    string: (a, b) => a[activeColumn].localeCompare(b[activeColumn]),\n    number: (a, b) => a[activeColumn] - b[activeColumn],\n  };\n  const callback = by[sortType] || (() => 0);\n  const sortedItems = searchedItems.sort(callback);\n\n  if (direction === 'descending') {\n    _.reverse(sortedItems);\n  }\n\n  const totalItemsAmount = sortedItems.length;\n  const pagesAmount = Math.ceil(totalItemsAmount / itemsPerPage);\n  const firstItem = (page - 1) * itemsPerPage + 1;\n  const lastItem = page * itemsPerPage;\n  const visibleItems = sortedItems.slice(firstItem - 1, lastItem);\n\n  return (\n    <div className=\"table-wrapper\">\n      <Header\n        onChangeItemsPerPage={changeItemsPerPage}\n        onSearchItems={searchItems}\n        inputValue={highlightedValue}\n        selectValue={itemsPerPage}\n      />\n\n      <Table striped sortable selectable celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell className={cn('header')}>\n              <Checkbox\n                toggle\n                onChange={toggleAllItems}\n                checked={items.every(item => selectedItems.includes(item.id))}\n              />\n            </Table.HeaderCell>\n\n            {_.map(columnConfig, (column, key) => (\n              <Table.HeaderCell\n                style={{ textAlign: 'center' }}\n                key={column.title}\n                sorted={activeColumn === column ? direction : null}\n                onClick={() => handleSort(key, column.sortType)}\n                // className={column.title === 'Название' && 'name-header'}\n                className={cn(\n                  'header',\n                  (column.title === 'Описание' && 'snipet-header'),\n                )}\n              >\n                {column.title}\n              </Table.HeaderCell>\n            ))}\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {_.map(visibleItems, item => (\n            <Table.Row key={item.imageUrl}>\n              <Table.Cell>\n                <Checkbox\n                  toggle\n                  checked={selectedItems.includes(item.id)}\n                  onChange={() => toggleItem(item.id)}\n                />\n              </Table.Cell>\n\n              {itemToEditId === item.id\n                && item[itemToEditField] === item.name ? (\n                  <Table.Cell style={{ padding: 0 }}>\n                    <Form>\n                      <Form.TextArea\n                        defaultValue={item.name}\n                        onChange={setNewCellValue}\n                        onKeyDown={editWithKey}\n                        onBlur={editOnBlur}\n                      />\n                    </Form>\n                  </Table.Cell>\n                ) : (\n                  <Table.Cell\n                    onDoubleClick={() => setEditState(item, item.name)}\n                  >\n                    {highlightText(item.name)}\n                  </Table.Cell>\n                )}\n\n              {itemToEditId === item.id\n                && item[itemToEditField] === item.age ? (\n                  <Table.Cell style={{ padding: 0 }}>\n                    <Form>\n                      <Form.TextArea\n                        defaultValue={item.age}\n                        onChange={setNewCellValue}\n                        onKeyDown={editWithKey}\n                        onBlur={editOnBlur}\n                      />\n                    </Form>\n                  </Table.Cell>\n                ) : (\n                  <Table.Cell\n                    onDoubleClick={() => setEditState(item, item.age)}\n                  >\n                    {item.age}\n                  </Table.Cell>\n                )}\n\n              {itemToEditId === item.id\n                && item[itemToEditField] === item.snippet ? (\n                  <Table.Cell style={{ padding: 0 }}>\n                    <Form>\n                      <Form.TextArea\n                        defaultValue={item.snippet}\n                        onChange={setNewCellValue}\n                        onKeyDown={editWithKey}\n                        onBlur={editOnBlur}\n                      />\n                    </Form>\n                  </Table.Cell>\n                ) : (\n                  <Table.Cell\n                    onDoubleClick={() => setEditState(item, item.snippet)}\n                  >\n                    {highlightText(item.snippet)}\n                  </Table.Cell>\n                )}\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n\n      <Footer\n        firstTableItem={firstItem}\n        lastTableItem={lastItem}\n        entries={totalItemsAmount}\n        onSwitchPage={switchPage}\n        pagesAmount={pagesAmount}\n        activePage={page}\n      />\n    </div>\n  );\n};\n\nDatatable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n  columnConfig: PropTypes.objectOf(\n    PropTypes.object\n  ).isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n\nexport default Datatable;\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { Button, Message } from 'semantic-ui-react';\nimport { getPhonesFromServer } from './api/getPhonesFromServer';\nimport Datatable from './Components/Datatable';\n\nconst columnConfig = {\n  name: {\n    title: 'Название',\n    sortType: 'string',\n    isSearchable: true,\n  },\n  age: {\n    title: 'Возраст',\n    sortType: 'number',\n  },\n  snippet: {\n    title: 'Описание',\n    isSearchable: true,\n  },\n};\nconst storedItems = JSON.parse(localStorage.getItem('originalItems'));\n\nconst App = () => {\n  const [originalItems, setOriginalItems] = useState(storedItems || []);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async() => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const phonesData = await getPhonesFromServer();\n\n        if (!storedItems) {\n          setOriginalItems(phonesData);\n        }\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const editItem = (itemToEdit) => {\n    const editedItems = originalItems.map((item) => {\n      if (item.id === itemToEdit.id) {\n        const keys = Object.keys(columnConfig);\n\n        if (keys.every(key => itemToEdit[key] === '')) {\n          return 'empty';\n        }\n\n        return itemToEdit;\n      }\n\n      return item;\n    });\n\n    if (editedItems.includes('empty')) {\n      editedItems.splice(editedItems.indexOf('empty'), 1);\n    }\n\n    setOriginalItems(editedItems);\n  };\n\n  const setDefaultItems = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"table-container\">\n        <h1 className=\"main-title\">React Datatable</h1>\n\n        {isError && <div className=\"message\">Something went wrong ...</div>}\n\n        {isLoading ? (\n          <div className=\"message\">Loading ...</div>\n        ) : (\n          <Datatable\n            items={originalItems}\n            columnConfig={columnConfig}\n            onEdit={editItem}\n          />\n        )}\n      </div>\n\n      {storedItems && (\n        <>\n          <Message>\n            <p>The data was restored from your local storage</p>\n          </Message>\n\n          <Button onClick={setDefaultItems}>\n            Reset to default\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}