{"version":3,"sources":["api/getPhonesFromServer.js","Components/Header.js","Components/Footer.js","Components/Datatable.js","App.js","index.js"],"names":["getPhonesFromServer","phonesData","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","itemsPerPageOptions","key","value","text","Header","_ref","onChangeItemsPerPage","onSearchItems","react_default","createElement","className","Select","placeholder","options","onChange","Input","icon","iconPosition","type","Footer","firstTableItem","lastTableItem","entries","onSwitchPage","pagesAmount","activePage","lastItemOnPage","concat","Pagination","boundaryRange","ellipsisItem","firstItem","content","Icon","name","lastItem","prevItem","nextItem","pointing","secondary","totalPages","onPageChange","Datatable","items","columnConfig","_useState","useState","_useState2","Object","slicedToArray","page","setPage","_useState3","_useState4","itemsPerPage","setItemsPerPage","_useState5","_useState6","searchValue","setSearchValue","_useState7","_useState8","highlightedValue","setHighlitedValue","_useState9","_useState10","activeColumn","setActiveColumn","_useState11","_useState12","direction","setDirection","_useState13","_useState14","sortType","setSortType","_useState15","_useState16","selectedItems","setSelectedItems","applySearchWithDebounce","_","debounce","highlightText","parts","split","RegExp","map","part","i","react","toLowerCase","searchedItems","filter","item","keys","isSearchable","some","includes","callback","string","b","localeCompare","number","sortedItems","sort","reverse","totalItemsAmount","length","Math","ceil","visibleItems","slice","Components_Header","$","data","Table","striped","sortable","selectable","celled","Row","HeaderCell","Checkbox","toggle","checked","column","style","textAlign","title","sorted","onClick","clickedColumn","currentSortType","Body","Cell","toConsumableArray","selectedItem","newSelectedItems","push","toggleItem","age","snippet","Components_Footer","App","originalItems","setOriginalItems","isLoading","setIsLoading","isError","setIsError","useEffect","t0","fetchData","Components_Datatable","onSelectionChanged","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.86a497e1.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst PHONES_URL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\nexport const getPhonesFromServer = async() => {\n  const phonesData = await fetch(PHONES_URL);\n\n  return phonesData.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Select } from 'semantic-ui-react';\n\nconst itemsPerPageOptions = [\n  {\n    key: 2, value: 2, text: '2 phones per page',\n  },\n  {\n    key: 3, value: 3, text: '3 phones per page',\n  },\n  {\n    key: 5, value: 5, text: '5 phones per page',\n  },\n  {\n    key: 10, value: 10, text: '10 phones per page',\n  },\n  {\n    key: 20, value: 20, text: '20 phones per page',\n  },\n];\n\nconst Header = ({ onChangeItemsPerPage, onSearchItems }) => (\n  <div className=\"table-options\">\n    <Select\n      placeholder=\"Select phones per page\"\n      options={itemsPerPageOptions}\n      onChange={onChangeItemsPerPage}\n    />\n\n    <Input\n      icon=\"search\"\n      placeholder=\"Search...\"\n      iconPosition=\"left\"\n      type=\"search\"\n      onChange={onSearchItems}\n    />\n  </div>\n);\n\nHeader.propTypes = {\n  onChangeItemsPerPage: PropTypes.func.isRequired,\n  onSearchItems: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Pagination } from 'semantic-ui-react';\n\nconst Footer = ({\n  firstTableItem,\n  lastTableItem,\n  entries,\n  onSwitchPage,\n  pagesAmount,\n  activePage,\n}) => {\n  const lastItemOnPage = lastTableItem > entries ? entries : lastTableItem;\n\n  return (\n    <div className=\"table-options\">\n      <div>\n        {`Showing ${firstTableItem} to ${lastItemOnPage} of ${entries} entries`}\n      </div>\n\n      <Pagination\n        activePage={activePage}\n        boundaryRange={0}\n        ellipsisItem={null}\n        firstItem={{\n          content: <Icon name=\"angle double left\" />, icon: true,\n        }}\n        lastItem={{\n          content: <Icon name=\"angle double right\" />, icon: true,\n        }}\n        prevItem={{\n          content: <Icon name=\"angle left\" />, icon: true,\n        }}\n        nextItem={{\n          content: <Icon name=\"angle right\" />, icon: true,\n        }}\n        pointing\n        secondary\n        totalPages={pagesAmount}\n        onPageChange={onSwitchPage}\n      />\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  firstTableItem: PropTypes.number.isRequired,\n  lastTableItem: PropTypes.number.isRequired,\n  entries: PropTypes.number.isRequired,\n  pagesAmount: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onSwitchPage: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { Table, Checkbox } from 'semantic-ui-react';\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst Datatable = ({ items, columnConfig }) => {\n  const [page, setPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [searchValue, setSearchValue] = useState('');\n  const [highlightedValue, setHighlitedValue] = useState('');\n  const [activeColumn, setActiveColumn] = useState(null);\n  const [direction, setDirection] = useState(null);\n  const [sortType, setSortType] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  const switchPage = ($, data) => {\n    setPage(data.activePage);\n  };\n\n  const changeItemsPerPage = ($, data) => {\n    setItemsPerPage(data.value);\n    setPage(1);\n  };\n\n  const applySearchWithDebounce = _.debounce((value) => {\n    setSearchValue(value);\n  }, 500);\n\n  const searchItems = ($, data) => {\n    const value = data.value.toLowerCase().slice(0, 37);\n\n    setPage(1);\n    setHighlitedValue(value);\n    applySearchWithDebounce(value);\n  };\n\n  const highlightText = (text) => {\n    if (!highlightedValue) {\n      return text;\n    }\n\n    const parts = text.split(new RegExp(`(${highlightedValue})`, 'gi'));\n\n    return _.map(parts, (part, i) => (\n      <Fragment key={`${part + i}`}>\n        {part.toLowerCase() === highlightedValue.toLowerCase()\n          ? <span className=\"highlighted-text\">{part}</span>\n          : part}\n      </Fragment>\n    ));\n  };\n\n  const handleSort = (clickedColumn, currentSortType) => {\n    if (!currentSortType) {\n      return;\n    }\n\n    setSortType(currentSortType);\n\n    if (activeColumn !== clickedColumn) {\n      setActiveColumn(clickedColumn);\n      setDirection('ascending');\n    } else {\n      setDirection(direction === 'ascending' ? 'descending' : 'ascending');\n    }\n  };\n\n  const toggleItem = (item) => {\n    if (selectedItems.includes(item)) {\n      setSelectedItems([...selectedItems].filter(\n        selectedItem => selectedItem !== item\n      ));\n    } else {\n      const newSelectedItems = [...selectedItems];\n\n      newSelectedItems.push(item);\n\n      setSelectedItems(newSelectedItems);\n    }\n  };\n\n  const toggleAllItems = () => {\n    items.length !== selectedItems.length\n      ? setSelectedItems(items)\n      : setSelectedItems([]);\n  };\n\n  const value = searchValue.toLowerCase();\n  const searchedItems = items.filter(item => (\n    _.keys(columnConfig)\n      .filter(key => columnConfig[key].isSearchable)\n      .some(key => item[key].toLowerCase().includes(value))\n  ));\n\n  const by = {\n    string: (a, b) => a[activeColumn].localeCompare(b[activeColumn]),\n    number: (a, b) => a[activeColumn] - b[activeColumn],\n  };\n  const callback = by[sortType] || (() => 0);\n  const sortedItems = searchedItems.sort(callback);\n\n  if (direction === 'descending') {\n    _.reverse(sortedItems);\n  }\n\n  const totalItemsAmount = sortedItems.length;\n  const pagesAmount = Math.ceil(totalItemsAmount / itemsPerPage);\n  const firstItem = (page - 1) * itemsPerPage + 1;\n  const lastItem = page * itemsPerPage;\n  const visibleItems = sortedItems.slice(firstItem - 1, lastItem);\n\n  return (\n    <div className=\"table-wrapper\">\n      <Header\n        onChangeItemsPerPage={changeItemsPerPage}\n        onSearchItems={searchItems}\n      />\n\n      <Table striped sortable selectable celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>\n              <Checkbox\n                toggle\n                onChange={toggleAllItems}\n                checked={selectedItems.length === items.length}\n              />\n            </Table.HeaderCell>\n\n            {_.map(columnConfig, (column, key) => (\n              <Table.HeaderCell\n                style={{ textAlign: 'center' }}\n                key={column.title}\n                sorted={activeColumn === column ? direction : null}\n                onClick={() => handleSort(key, column.sortType)}\n              >\n                {column.title}\n              </Table.HeaderCell>\n            ))}\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {_.map(visibleItems, item => (\n            <Table.Row key={item.name}>\n              <Table.Cell>\n                <Checkbox\n                  toggle\n                  checked={selectedItems.includes(item)}\n                  onChange={() => toggleItem(item)}\n                />\n              </Table.Cell>\n\n              <Table.Cell>{highlightText(item.name)}</Table.Cell>\n              <Table.Cell>{item.age}</Table.Cell>\n              <Table.Cell>{highlightText(item.snippet)}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n\n      <Footer\n        firstTableItem={firstItem}\n        lastTableItem={lastItem}\n        entries={totalItemsAmount}\n        onSwitchPage={switchPage}\n        pagesAmount={pagesAmount}\n        activePage={page}\n      />\n    </div>\n  );\n};\n\nDatatable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n  columnConfig: PropTypes.objectOf(\n    PropTypes.string\n  ).isRequired,\n};\n\nexport default Datatable;\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { getPhonesFromServer } from './api/getPhonesFromServer';\nimport Datatable from './Components/Datatable';\n\nconst columnConfig = {\n  name: {\n    title: 'Название',\n    sortType: 'string',\n    isSearchable: true,\n  },\n  age: {\n    title: 'Возраст',\n    sortType: 'number',\n  },\n  snippet: {\n    title: 'Описание',\n    isSearchable: true,\n  },\n};\n\nconst App = () => {\n  const [originalItems, setOriginalItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async() => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const phonesData = await getPhonesFromServer();\n\n        setOriginalItems(phonesData);\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"main-title\">React Datatable</h1>\n\n      {isError && <div className=\"message\">Something went wrong ...</div>}\n\n      {isLoading ? (\n        <div className=\"message\">Loading ...</div>\n      ) : (\n        <Datatable\n          items={originalItems}\n          columnConfig={columnConfig}\n          onSelectionChanged={(selectedItems) => {}}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}